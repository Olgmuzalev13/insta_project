# Generated by Django 4.2.11 on 2024-04-10 12:32
from django.db import migrations, transaction
import random


def fill_author_posts(apps, schema_editor):
    db_alias = schema_editor.connection.alias

    users_list = list(apps.get_model(
        "instasecond", "User").objects.using(db_alias).all())
    posts = apps.get_model("instasecond", "Posts")

    if not users_list:
        return

    with transaction.atomic():
        print('\nFilling Posts:')
        for post in posts.objects.using(db_alias).all():
            print(posts)
            post.author = random.choice(users_list)
            post.save()

def fill_content_posts(apps, schema_editor):
    db_alias = schema_editor.connection.alias

    users_list = list(apps.get_model(
        "instasecond", "User").objects.using(db_alias).all())
    posts = apps.get_model("instasecond", "Posts")

    if not users_list:
        return

    with transaction.atomic():
        print('\nFilling Posts:')
        for post in posts.objects.using(db_alias).all():
            print(posts)
            post.author = random.choice(users_list)
            post.save()

def delete_cats_breed(apps, schema_editor):
    db_alias = schema_editor.connection.alias

    cats = apps.get_model("some_app", "Cats")

    with transaction.atomic():
        print('\nCleaning cat breeds:')
        for cat in cats.objects.using(db_alias).filter(cat_breed__isnull=False).all():
            print(cat)
            cat.cat_breed = None
            cat.save()


class Migration(migrations.Migration):

    dependencies = [
        ('instasecond', '0009_alter_posts_image'),
    ]

    operations = [
        migrations.RunPython(fill_author_posts, reverse_code=delete_cats_breed),
    ]
